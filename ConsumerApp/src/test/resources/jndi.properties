#
# This is an example jndi.properties file for use with ActiveMQ. To make use of
# the locally available ActiveMQ JNDI provider place this file in the classpath
# of the client application.
#
#
# The java.naming.factory.initial property is a standard JNDI system
# property
# (http://java.sun.com/products/jndi/tutorial/beyond/env/context.html)
# that is used to specify the InitialContextFactory implementation to
# use. In this instance, the ActiveMQInitialContextFactory is used to
# provide a locally available context factory.
#
java.naming.factory.initial = \
org.apache.activemq.jndi.ActiveMQInitialContextFactory
#
# The JNDI names for the connection factories to be registered in JNDI.
# These are the name that should be used to lookup the connection
# factories in JNDI.
#
connectionFactoryNames = remotePublisherConnectionFactory, \
remoteConsumerConnectionFactory
#
# Configure the connection factory for publishers. For more information
# on available properties, see the ActiveMQConnectionFactory class.
#
connection.remotePublisherConnectionFactory.brokerURL = tcp://localhost:61616
connection.remotePublisherConnectionFactory.username = admin
connection.remotePublisherConnectionFactory.username = admin
#
# Configure the connection factory for consumers. For more information
# on available properties, see the ActiveMQConnectionFactory class.
#
connection.remoteConsumerConnectionFactory.username = tcp://localhost:61616
connection.remoteConsumerConnectionFactory.username = admin
connection.remoteConsumerConnectionFactory.username = admin
#
# Define a JMS queue destination to be registered in JNDI. The format
# for specifying JMS queue is queue.<logical name> = <physical name>
# where <logical name> is whatever you like and <physical name> is the
# actual queue name referenced by ActiveMQ.
#
queue.ReqQueue = LLY.TRAINING.EMAIL.IN
queue.ResQueue = LLY.TRAINING.EMAIL.RES
#
# Define a JMS topic destination to be registered in JNDI. The format for
# specifying a JMS topic is topic.<logical name> = <physical name> where
# <logical name> is whatever you like and <physical name> is the actual
# topic name referenced by ActiveMQ.
#
#topic.someTopicName = GREEN.DEMO.TOPIC
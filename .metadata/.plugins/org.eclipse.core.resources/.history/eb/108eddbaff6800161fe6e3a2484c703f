<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
	xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs" xmlns:cxf="http://cxf.apache.org/blueprint/core"
	xmlns:camel="http://camel.apache.org/schema/blueprint" xmlns:camel-cxf="http://camel.apache.org/schema/blueprint/cxf"
	xmlns:jpa="http://aries.apache.org/xmlns/jpa/v1.0.0"
	xsi:schemaLocation="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd
	http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint-2.16.3.xsd
	http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/cxf/camel-cxf-2.16.3-blueprint.xsd
http://aries.apache.org/xmlns/jpa/v1.0.0 http://aries.apache.org/schemas/jpa/jpa.xsd">


	<!-- this is the JDBC data source which uses an in-memory only Apache Derby 
		database -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		  
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		  
		<property name="url" value="jdbc:derby:memory:orders;create=true" />
		  
		<property name="username" value="" />
		  
		<property name="password" value="" />
	</bean>
	 
	<!-- bean which creates/destroys the database table for this example -->
	<bean id="initDatabase" class="org.apache.camel.example.sql.DatabaseBean"  
		init-method="create" destroy-method="destroy">
		  
		<property name="dataSource" ref="dataSource" />
	</bean>
	 
	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		  
		<property name="dataSource" ref="dataSource" />
	</bean>


<!-- order bean is our business logic bean that creates new orders -->
<!-- <bean id="orderBean" class="org.apache.camel.example.sql.OrderBean"/> -->
 
<!-- here is Camel configured with a number of routes -->
<camelContext xmlns="http://camel.apache.org/schema/spring">
 
  <!-- use Camel property placeholder loaded from the given file -->
<!--   <propertyPlaceholder id="placeholder" location="classpath:sql.properties"/> -->
 
  <!-- route that generate new orders and insert them in the database -->
  <route id="generateOrder-route">
    <from uri="timer:foo?period=5s"/>
    <transform>
      <method ref="orderBean" method="generateOrder"/>
    </transform>
    <to uri="sql:{{sql.insertOrder}}"/>
    <log message="Inserted new order ${body[id]}"/>
  </route>
 
  <!-- route that process the orders by picking up new rows from the database
       and when done processing then update the row to mark it as processed -->
  <route id="processOrder-route">
    <from uri="sql:{{sql.selectOrder}}?onConsume={{sql.markOrder}}"/>
    <to uri="bean:orderBean?method=processOrder"/>
    <log message="${body}"/>
  </route>
 
</camelContext>



	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
		<property name="userName" value="karaf" />
		<property name="password" value="karaf" />
	</bean>

	<bean id="jmscomp" class="org.apache.camel.component.jms.JmsComponent">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>


	<bean id="jaxbContext" class="javax.xml.bind.JAXBContext"
		factory-method="newInstance">
		<argument>
			<list>
				<value>com.virtusa.audit.eda.entity.LoadAuditEntity</value>
			</list>
		</argument>
	</bean>

	<bean id="jaxbDataFormat" class="org.apache.camel.converter.jaxb.JaxbDataFormat">
		<argument ref="jaxbContext" />
	</bean>
</blueprint>
 
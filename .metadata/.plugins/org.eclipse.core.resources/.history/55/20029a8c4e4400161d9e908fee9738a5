package com.virtusa.test.web.rest

import static org.hamcrest.collection.IsCollectionWithSize.hasSize
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status
//import org.springframework.boot.actuate.health.OrderedHealthAggregator.StatusComparator;
import org.springframework.http.MediaType
import spock.lang.Unroll;
import static org.hamcrest.Matchers.*;

import com.virtusa.test.base.TransactionalWebIntegrationTest
import com.virtusa.test.base.WebAppIntegrationBaseSpecification

@TransactionalWebIntegrationTest
class ShippmentResourceTest extends WebAppIntegrationBaseSpecification {

	@Unroll
	def "get the list from database (id,orderId,productId,status) {
		given:"based on the block we need to fetch the floor details"

		when: "I entered the block no"
		def createResponse=this.mockMvc.perform(get("/api/block/${id}").accept(MediaType.APPLICATION_JSON))
		then: "a floor is fetched"
		createResponse.andExpect(status().is(statusCode))
		if(statusCode == 200) {
			createResponse.andExpect(jsonPath('$[*]',is(floorId)))
		}
		where:
		id  | floorId | statusCode
		10  | [7, 5]| 200
		5   | [1]	 | 200
		6   |  5      | 400
		null |  10     | 400
	}


	
}
